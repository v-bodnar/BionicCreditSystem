package userinterface;

import java.rmi.RemoteException;
import java.util.Date;

import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import dao.GenericDao;
import dao.PersistException;
import entity.CreditProgram;
import entity.User;
import rmi.DAOStubFactory;
import service.FieldChecker;
import tablemodels.CreditProgramTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author bodnar
 */
public class CreditProgramAddForm extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4562246844917625704L;
	/**
	 * Creates new form CreditProgramAddForm
	 */
	public CreditProgramAddForm(User currentUser,  CreditProgramTableModel tableModel) {
		this.currentUser = currentUser;
		this.tableModel = tableModel;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		mainPanel = new javax.swing.JPanel();
		title = new javax.swing.JLabel();
		titleLabel = new javax.swing.JLabel();
		titleField = new javax.swing.JTextField();
		minSumLabel = new javax.swing.JLabel();
		minSumField = new javax.swing.JTextField();
		maxSumLabel = new javax.swing.JLabel();
		maxSumField = new javax.swing.JTextField();
		periodLabel = new javax.swing.JLabel();
		periodField = new javax.swing.JTextField();
		percentLabel = new javax.swing.JLabel();
		percentField = new javax.swing.JTextField();
		descrLabel = new javax.swing.JLabel();
		addButton = new javax.swing.JButton();
		descrScrollPane = new javax.swing.JScrollPane();
		descrText = new javax.swing.JTextArea();
		statusPanel = new javax.swing.JPanel();
		statusLabel = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Регистрация в системе Кредитный Менеджер");
		setBounds(new java.awt.Rectangle(0, 0, 0, 0));
		setPreferredSize(new java.awt.Dimension(600, 600));
		setLocation(360, 100);
		getContentPane().setLayout(new java.awt.GridBagLayout());

		mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
		mainPanel.setToolTipText("");
		mainPanel.setMaximumSize(new java.awt.Dimension(450, 300));
		mainPanel.setMinimumSize(new java.awt.Dimension(450, 300));
		mainPanel.setPreferredSize(new java.awt.Dimension(580, 300));
		mainPanel.setRequestFocusEnabled(false);
		mainPanel.setLayout(new java.awt.GridBagLayout());

		title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		title.setText("<html><h3>Добавление кредитной программы</h3></html>");
		title.setToolTipText("");
		title.setPreferredSize(new java.awt.Dimension(460, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(title, gridBagConstraints);

		titleLabel.setLabelFor(titleField);
		titleLabel.setText("Название");
		titleLabel.setToolTipText("Введите название кредитной программы");
		titleLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		titleLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		titleLabel.setName(""); // NOI18N
		titleLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(titleLabel, gridBagConstraints);

		titleField.setToolTipText("Введите название кредитной программы");
		titleField.setMaximumSize(new java.awt.Dimension(120, 25));
		titleField.setMinimumSize(new java.awt.Dimension(120, 25));
		titleField.setName(""); // NOI18N
		titleField.setPreferredSize(new java.awt.Dimension(130, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(titleField, gridBagConstraints);

		minSumLabel.setLabelFor(minSumField);
		minSumLabel.setText("Мин. сумма");
		minSumLabel.setToolTipText("Минимальная сумма кредита");
		minSumLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		minSumLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		minSumLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(minSumLabel, gridBagConstraints);

		minSumField.setToolTipText("Минимальная сумма кредита");
		minSumField.setMaximumSize(new java.awt.Dimension(120, 25));
		minSumField.setMinimumSize(new java.awt.Dimension(120, 25));
		minSumField.setPreferredSize(new java.awt.Dimension(130, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(minSumField, gridBagConstraints);

		maxSumLabel.setLabelFor(maxSumField);
		maxSumLabel.setText("Макс. сумма");
		maxSumLabel.setToolTipText("Максимальная сумма кредита");
		maxSumLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		maxSumLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		maxSumLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(maxSumLabel, gridBagConstraints);

		maxSumField.setToolTipText("Максимальная сумма кредита");
		maxSumField.setPreferredSize(new java.awt.Dimension(130, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(maxSumField, gridBagConstraints);

		periodLabel.setLabelFor(periodField);
		periodLabel.setText("Период, мес");
		periodLabel.setToolTipText("На сколько месяцев дается кредит");
		periodLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		periodLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		periodLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(periodLabel, gridBagConstraints);

		periodField.setToolTipText("На сколько месяцев дается кредит");
		periodField.setPreferredSize(new java.awt.Dimension(130, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(periodField, gridBagConstraints);

		percentLabel.setLabelFor(percentField);
		percentLabel.setText("Процентная ставка");
		percentLabel.setToolTipText("Процентная ставка по кредиту");
		percentLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		percentLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		percentLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(percentLabel, gridBagConstraints);

		percentField.setToolTipText("Процентная ставка по кредиту");
		percentField.setMaximumSize(new java.awt.Dimension(120, 25));
		percentField.setMinimumSize(new java.awt.Dimension(120, 25));
		percentField.setPreferredSize(new java.awt.Dimension(130, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(percentField, gridBagConstraints);

		descrLabel.setText("Описание");
		descrLabel.setToolTipText("Описание кредитной программы");
		descrLabel.setMaximumSize(new java.awt.Dimension(90, 25));
		descrLabel.setMinimumSize(new java.awt.Dimension(90, 25));
		descrLabel.setPreferredSize(new java.awt.Dimension(150, 25));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(descrLabel, gridBagConstraints);

		addButton.setText("Добавить");
		addButton.setMargin(new java.awt.Insets(10, 10, 10, 10));
		addButton.setPreferredSize(new java.awt.Dimension(137, 25));
		addButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addButtonActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 8;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		mainPanel.add(addButton, gridBagConstraints);

		descrScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(
				2, 2, 2, 2));

		descrText.setColumns(20);
		descrText.setRows(5);
		descrText.setToolTipText("Описание кредитной программы");
		descrText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		descrText.setMargin(new java.awt.Insets(0, 0, 0, 0));
		descrScrollPane.setViewportView(descrText);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		mainPanel.add(descrScrollPane, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		getContentPane().add(mainPanel, gridBagConstraints);

		statusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
		statusPanel.setPreferredSize(new java.awt.Dimension(580, 200));
		statusPanel.setLayout(new java.awt.GridLayout(1, 1));

		statusLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		statusPanel.add(statusLabel);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 2, 5, 2);
		getContentPane().add(statusPanel, gridBagConstraints);

		titleField.setInputVerifier(new titleFieldVerifier());
		minSumField.setInputVerifier(new minSumFieldVerifier());
		maxSumField.setInputVerifier(new maxSumVerifier());
		periodField.setInputVerifier(new periodFieldVerifier());
		percentField.setInputVerifier(new percentFieldVerifier());
		descrText.setInputVerifier(new descrTextVerifier());

		pack();
	}// </editor-fold>

	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Integer id = null;
		Date now = new Date();

		if (FieldChecker.checkIfNull(titleField.getText()) == ""
				&& FieldChecker.checkSum(minSumField.getText()) == ""
				&& FieldChecker.checkSum(maxSumField.getText()) == ""
				&& FieldChecker.checkPeriod(periodField.getText()) == ""
				&& FieldChecker.checkPerсent(percentField.getText()) == ""
				&& FieldChecker.checkIfNull(descrText.getText()) == "") {
			
        	try {
        		id = creditProgramDao.getNextPK();
        		CreditProgram creditProgram = new CreditProgram(id, 1, titleField.getText(), Integer.parseInt(percentField.getText()), Integer.parseInt(periodField.getText()), Float.parseFloat(minSumField.getText()),  Float.parseFloat(maxSumField.getText()), "", descrText.getText(), now, currentUser.getId(), true);
        		creditProgramDao.persist(creditProgram);
        		tableModel.fireTableDataChanged();
				JOptionPane.showMessageDialog(statusPanel,
						"Добавлена новая кредитная программа с номером: " + id);
        		this.dispose();
        		tableModel.fireTableDataChanged();
        	} catch (NumberFormatException | RemoteException | PersistException e) {
    			e.printStackTrace();
    			new ErrorFrame(e);
    		}
			
		} else {
			statusLabel.setText(
					FieldChecker.checkIfNull(titleField.getText()) +
					FieldChecker.checkSum(minSumField.getText()) +
					FieldChecker.checkSum(maxSumField.getText()) +
					FieldChecker.checkPeriod(periodField.getText()) +
					FieldChecker.checkPerсent(percentField.getText()) +
					FieldChecker.checkIfNull(descrText.getText()));
		}

	}

	class titleFieldVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextField textField = (JTextField) input;
			statusLabel.setText(FieldChecker.checkIfNull(textField.getText()));
			return FieldChecker.checkIfNull(textField.getText()) == "";
		}
	}

	class minSumFieldVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextField textField = (JTextField) input;
			statusLabel.setText(FieldChecker.checkSum(textField.getText()));
			return FieldChecker.checkSum(textField.getText()) == "";
		}
	}

	class maxSumVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextField textField = (JTextField) input;
			statusLabel.setText(FieldChecker.checkSum(textField.getText()));
			return FieldChecker.checkSum(textField.getText()) == "";
		}
	}

	class periodFieldVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextField textField = (JTextField) input;
			statusLabel.setText(FieldChecker.checkPeriod(textField.getText()));
			return FieldChecker.checkPeriod(textField.getText()) == "";
		}
	}

	class percentFieldVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextField textField = (JTextField) input;
			statusLabel.setText(FieldChecker.checkPerсent(textField.getText()));
			return FieldChecker.checkPerсent(textField.getText()) == "";
		}
	}

	class descrTextVerifier extends InputVerifier {
		public boolean verify(JComponent input) {
			JTextArea textField = (JTextArea) input;
			statusLabel.setText(FieldChecker.checkIfNull(textField.getText()));
			return FieldChecker.checkIfNull(textField.getText()) == "";
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JButton addButton;
	private javax.swing.JLabel descrLabel;
	private javax.swing.JScrollPane descrScrollPane;
	private javax.swing.JTextArea descrText;
	private javax.swing.JPanel mainPanel;
	private javax.swing.JTextField maxSumField;
	private javax.swing.JLabel maxSumLabel;
	private javax.swing.JTextField minSumField;
	private javax.swing.JLabel minSumLabel;
	private javax.swing.JTextField percentField;
	private javax.swing.JLabel percentLabel;
	private javax.swing.JTextField periodField;
	private javax.swing.JLabel periodLabel;
	private javax.swing.JLabel statusLabel;
	private javax.swing.JPanel statusPanel;
	private javax.swing.JLabel title;
	private javax.swing.JTextField titleField;
	private javax.swing.JLabel titleLabel;
	private User currentUser;
	private CreditProgramTableModel tableModel;
	private static DAOStubFactory daoStubFactory = MainFrame.getDaoStubFactory();
	//private GenericDao<Account> accountDao = daoStubFactory.getAccountDao();
	private GenericDao<CreditProgram> creditProgramDao = daoStubFactory.getCreditProgramDao();
	//private GenericDao<CreditRequest> creditRequestDao = daoStubFactory.getCreditRequestDao();
	//private GenericDao<Credits> creditsDao = daoStubFactory.getCreditsDao();
	//private GenericDao<Currency> currencyDao = daoStubFactory.getCurrencyDao();
	//private GenericDao<Role> roleDao = daoStubFactory.getRoleDao();
	//private GenericDao<Transaction> transactionDao = daoStubFactory.getTransactionDao();
	//private GenericDao<User> userDao = daoStubFactory.getUserDao();
	// End of variables declaration
}
